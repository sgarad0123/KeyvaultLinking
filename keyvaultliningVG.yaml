trigger: none

variables:
  - group: vg-create-vg-source

stages:
  - stage: ValidateAndUpdateSecrets
    displayName: 'Validate, Update and Retrieve Secrets'
    jobs:
      - job: Validate_Update_Retrieve
        displayName: 'Run secret validation, update, and retrieval'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Bash@3
            name: Validate
            inputs:
              filePath: './validate-secret.sh'
              env:
                app_id: $(app_id)
                secretName: $(secretName)
                ENV: $(ENV)

          - task: Bash@3
            name: UpdateSecret
            inputs:
              filePath: './update-secret.sh'
              env:
                keyVaultName: $(keyVaultName)
                secretName: $(secretName)
                secretValue: $(secretValue)
                ENV: $(ENV)

          - task: Bash@3
            name: RetrieveSecret
            inputs:
              filePath: './retrieve-secret.sh'
              env:
                keyVaultName: $(keyVaultName)
                secretName: $(secretName)
                ENV: $(ENV)

  - stage: CreateAndLinkVariableGroup
    displayName: 'Create & Link Variable Group'
    dependsOn: ValidateAndUpdateSecrets
    condition: succeeded()
    jobs:
      - job: CreateVG
        displayName: 'Create Variable Group and Link KeyVault Secrets'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Bash@3
            name: CreateVariableGroup
            inputs:
              filePath: './create-keyvault-linked-vg.sh'
              env:
                org: $(org)
                project: $(project)
                app_id: $(app_id)
                trackname: $(trackname)
                keyVaultName: $(keyVaultName)
                serviceConnectionId: $(serviceConnectionId)
                azure-devops-pat: $(azure-devops-pat)
                secretsToAdd: $(secretsToAdd)
                ENV: $(ENV)
